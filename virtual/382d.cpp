#include <string>
#include <iostream>
#include <stdio.h>
#include <queue>
#include <unordered_set>
#include <vector>
#include <iterator>
#include <math.h>
#include <algorithm>
#include <functional>
#include <cassert>

using namespace std;
typedef long long ll;


int main()
{

    // 普通に，cpp を使い慣れてなくてしんどいという説も若干あるが
    // まあ，cpp を使い慣れたら，大体どの言語にも応用できるでしょと思っとこう
    //  そんで，また今後別の言語で atcoder にチャレンジすればいいだけの話

    // いや問題の意味はわかったんだけど，実装がむずすぎて萎えてます
    // めっちゃ再帰っぽいことやらないといけなくないですか？
    // こういう for 分で書けない問題が苦手すぎて辛い

    // ごめんなさい，むずすぎて無理です．許してください．．
    // 答えを見る気しかないです．
    
    // 答えを見ましたが，for 分の実装はマジでアホ難しくて草が生えなかった
    // 最後にソートしたらいいって書いてるんだけど，辞書順に数字を並べるソートなんて普通の人間が知ってるわけないよねという話

    // 回答を見たんだが，あまりにも難しそうなので，一旦パスしてよろしいかね？
    // そんな簡単に溶けるもんか？
    // 後からソートしたりしてもいいんだけど，模範解答があまりにもアクロバティックすぎてちょっと厳しい説がなくもない
    // 公式放送もまあ悪くはないんだが，流石に難しすぎるという話で
    // どうしようか，とりあえず提出してエラーマークをつけておくべきなのか

    // N = 12 のパターン
    // 12 22 32 42 52 62 72 82 92 102 112 これはダメらしい
    // 9 19 29 39 49 59 69 79 89 99 109 119 これが限界か
    // 最初の値だけ決めて，そっから 10ずつ足していくムーブをやっていけばいいんだけど
    // で，10 足したところでどこまで増やせるかを各層で試していく感じです
    // というかこれ，最後の一の位さえわかっていれば，それで決め打ちできそうな感じができなくもないか？
    // 一の位を超えないように足し算して，10 足して次のループに渡していく感じ
    // いやまあそれが実装できれば苦労はないんだけれども 

    // OKなんとなく再帰の方のコードの内容は理解してきた
    // 一番下のループのキモい初期化は，その一個手前に書いて分離して仕舞えば多分なんてことない
    // vector をどんどん受け渡していく感じがマジでわからん
    // いやまあ疲れたんだけど，今日中にこれは実装してしまおう，ただまあ一旦パスということで
    // まずあのさいきのキモい書き方どうにかならんすかね
    // [&] これは，変数の参照キャプチャらしい．引数に全部指定するのめんどくさいので，むしろわかりやすくて素晴らしいかもしれない

    int n, m; cin>>n>>m;

    
}